@precedence {
	TitlePage @cut
	SceneHeading @left
	SceneNumber
	Speech @left
	Speech @cut
	Character @left
	dial @cut
	Parenthetical @left
	OpenParen @left
	CloseParen @left
	Centered @cut
	Note
	OpenNote @left
	CloseNote @left
	SceneHeading
	Lyric @left
	Transition @left
	Transition @cut
	Act @left
	Sequence @left
	Scene @left
	Transition @left
	BoneYard
	BYOpen @left
	BYClose @left
	PageBreak @left
	Synopsis @left
	//scriptbody 
	scriptbody
	_sh
	// topofscene
	hash
	Action @right
	// char @right
}

@skip {  } { } 

@top FountainScript {
	TitlePage*
	scriptbody+
}


scriptbody {
	(Act | Sequence | Scene)?
	SceneHeading
	(Transition | Parenthetical | 
		Lyric | Centered | Note | BoneYard | 
		PageBreak | Synopsis | Character Speech+ | Action)+
}


TitlePage {
	!TitlePage desensitizedTitleField multiline<Text> 
}
SceneHeading { !SceneHeading desensitizedSceneHeading 
SceneNumber? }


BoneYard {	!BYOpen BYOpen !BYClose BYClose }







Transition { 
	!Transition transition 
}

Character {
	!Character (uc | whitespace | "^")+ Parenthetical?
}
Speech {
    !Speech !dial char
}

Parenthetical {
	 !OpenParen OpenParen !CloseParen CloseParen
}

Action { Text }

Centered { !Centered ">"  "<" }

Act {  !Act hash  }
Sequence { !Sequence hash hash }
Scene { !Scene hash hash hash  }


// Section { Act | Sequence | Scene }
Synopsis { !Synopsis syn} 

Lyric {
	!Lyric lyrc 
}

Note { !OpenNote OpenNote  !CloseNote CloseNote }

// LineBreak {   }
PageBreak { !PageBreak pb }

multiline<expr> { (expr ("\n" expr)*)+}

// composites



@tokens {
	//tp<word> { @specialize[@name={word}]<word, > }
	SceneNumber { hash snc+ hash }
	snc {
		std.digit | "." | "-"
	}
	lyrc { "~" }
	underline { "_" }

	// by {
	// }

	OpenParen[closedBy="CloseParen"] { "(" }
	CloseParen[openedBy="OpenParen"] { ")" }
	
	OpenNote[closedBy="CloseNote",@name=Note] { "[[" }
	CloseNote[openedBy="OpenNote",@name=Note] { "]]" }
	BYOpen[closedBy="BYClose"] { "/*" }
	BYClose[openedBy="BYOpen"] { "*/" }

	uc { std.asciiUppercase+ }
	hash { "#" }
	Text { char+ }
	whitespace{ " " }
	ws { std.whitespace }
	char {
		$[\u{20}-\u{10fffe}]
	}
	syn { "==" }
	pb {"===" "="*}
	transition {
		(("FADE" whitespace ("TO BLACK" | "OUT") | "CUT TO BLACK") | char+ "TO:") | (">" whitespace* char+)
	}
	@precedence {
		syn pb ">" "<" "^" transition SceneNumber hash OpenNote CloseNote OpenParen CloseParen lyrc BYOpen BYClose uc "\n" whitespace ws char Text
	}
}


@external specialize {Text} desensitizedSceneHeading from "./tokens" {
	desensitizedSceneHeading
}
@external specialize {Text } desensitizedTitleField from "./tokens" {
	desensitizedTitleField
}
