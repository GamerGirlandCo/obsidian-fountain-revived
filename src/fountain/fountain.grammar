@detectDelim
@precedence {
	SceneNumber
	TitlePage
	Character
	dial @left
	Parenthetical
	SceneHeading @left
	Transition
	Underline
	Note @cut
	PageBreak @cut
	Lyric
	Dialogue @left
	Action
}

// Dialogue {
// 	!dial dial
// }

// @skip {ws | "\r" | "\n"}


@top FountainScript {
	// TitlePage*
	(
		// SceneHeading !SceneNumber SceneNumber?
		(
			(
			//  Parenthetical | Transition | 
			//  PB | Note | Lyric | 
			//  Synopsis | Dialogue | Action
			Note | Underline
			)
		)
	)
}
// Parenthetical {
// 	OpenParen char+ CloseParen
// }
// @external specialize {TContent} Character from "./tokenizer" {Character}
// @external specialize {TContent} Twansition from "./tokenizer" { Twansition }
// @external specialize {TContent} Parenthetical from "./tokenizer" { Parenthetical }


// Transition { Twansition }

// SceneNumber { (hash snc hash) }

// TitlePage {
// 	(desensitizedTitleField whitespace* colon whitespace* TContent)
// }

// @external specialize {TContent} desensitizedTitleField from "./tokenizer" {
// 	desensitizedTitleField
// }
// @external specialize {TContent} desensitizedSceneHeading from "./tokenizer" {
// 	desensitizedSceneHeading
// }

// SceneHeading { (desensitizedSceneHeading whitespace+) }

// Dialogue {
// 	char+
// }
@context MarkupContext from "./tokenizer"
@external tokens Note_ from "./tokenizer" { Note_ }
@external tokens Underline_ from "./tokenizer" { Underline_ }

// @external specialize {TContent} PB from "./tokenizer" { PB[@name="PageBreak"] }

// @external specialize {TContent} Lyric from "./tokenizer" { Lyric }

// @external specialize {TContent} Synopsis from "./tokenizer" { Synopsis }
// @external specialize {TContent} Action from "./tokenizer" { Action }
// @external tokens Speech from "./tokenizer" { Speech }

Note { OpenNote Note_ CloseNote }

Underline { Underline_ }

// Dialogue[@dynamicPrecedence=3] {
// 	TContent ~ambig
// }

// Action[@dynamicPrecedence=-3] {
// 	TContent ~ambig
// }


// @external specialize {TContent} Action from "./tokenizer" {
// 	Action
// }
// Transition { transition }


// Content { char+}




kw<term> { @specialize[@name={term}]<Content, term> }


@tokens {
	snc {
		@digit | "." | "-"
	}
	// by {
	// }



	OpenParen[closedBy="CloseParen"] { "(" }
	CloseParen[openedBy="OpenParen"] { ")" }
	OpenNote[closedBy="CloseNote"] { "[[" }
	CloseNote[openedBy="OpenNote"] { "]]" }
	BYOpen[closedBy="BYClose"] { "/*" }
	BYClose[openedBy="BYOpen"] { "*/" }
	OpenCenter[closedBy="CloseCenter"] { ">" }
	CloseCenter[openedBy="OpenCenter"] { "<" }

	Notee {
		OpenNote (TContent | nl)* CloseNote
	}

	uc { @asciiUppercase }
	
	TContent { char+ }
	MContent { TContent }
	colon { ":" }
	eq { "=" }
	hash { "#" }
	nl { "\r" | "\n" | "\r" "\n" }
	whitespace { " " }
	ws { @whitespace}
	char {
		$[\u{20}-\u{10fffe}]
	}
	@precedence { uc OpenParen CloseParen ws whitespace b1 b2 "===" hash 
	 OpenNote CloseNote TContent Action MContent eq "\r" "\n" nl char}

} 

