@detectDelim
@precedence {
	SceneNumber
	TitlePage
	Character
	Dialogue @left
	Parenthetical
	SceneHeading @left
	Transition
	Note @cut
	PageBreak @cut
	Lyric
	Action
}

@top FountainScript {
	TitlePage
	(
		SceneHeading !SceneNumber SceneNumber?
		(
			 (Character Parenthetical?) (!Dialogue Dialogue) | 
			 Parenthetical | Transition | PB | Note | Lyric  | Synopsis 
			//  | Action
			 )*
	)*
}



@external specialize {TContent} Character from "./tokenizer" {Character}
@external specialize {TContent} Twansition from "./tokenizer" { Twansition }
@external specialize {TContent} Parenthetical from "./tokenizer" { Parenthetical }
// Parenthetical {
// 	OpenParen char+ CloseParen
// }

Transition { Twansition }

SceneNumber { (hash snc hash) }

TitlePage {
	(desensitizedTitleField whitespace* colon whitespace* TContent)*
}

@external specialize {TContent} desensitizedTitleField from "./tokenizer" {
	desensitizedTitleField
}
@external specialize {TContent} desensitizedSceneHeading from "./tokenizer" {
	desensitizedSceneHeading
}

SceneHeading { (desensitizedSceneHeading whitespace+) }

Dialogue {
	char+
}
@external specialize {TContent} Note from "./tokenizer" { Note }

@external specialize {TContent} PB from "./tokenizer" { PB[@name="PageBreak"] }

@external specialize {TContent} Lyric from "./tokenizer" { Lyric }

@external specialize {TContent} Synopsis from "./tokenizer" { Synopsis }
@external specialize {TContent} Action from "./tokenizer" { Action }



@context MarkupContext from "./tokenizer"

// @external specialize {TContent} Action from "./tokenizer" {
// 	Action
// }
// Transition { transition }


Content { char+}




kw<term> { @specialize[@name={term}]<Content, term> }


@tokens {
	snc {
		@digit | "." | "-"
	}
	// by {
	// }



	OpenParen[closedBy="CloseParen"] { "(" }
	CloseParen[openedBy="OpenParen"] { ")" }
	OpenNote[closedBy="CloseNote"] { "[[" }
	CloseNote[openedBy="OpenNote"] { "]]" }
	BYOpen[closedBy="BYClose"] { "/*" }
	BYClose[openedBy="BYOpen"] { "*/" }
	OpenCenter[closedBy="CloseCenter"] { ">" }
	CloseCenter[openedBy="OpenCenter"] { "<" }

	Notee {
		OpenNote (TContent | nl)* CloseNote
	}

	uc { @asciiUppercase }
	
	TContent[@name=Action] { char+ }
	MContent { TContent }
	colon { ":" }
	eq { "=" }
	hash { "#" }
	nl { "\r" | "\n" | "\r" "\n" }
	whitespace { " " }
	ws { @whitespace}
	char {
		$[\u{20}-\u{10fffe}]
	}
	// Action {
	// 	(TContent)
	// }
	b1[@name=Note] { "[[" }
	b2[@name=Note] { "]]" }
	transition {
		(("FADE" whitespace ("TO BLACK" | "OUT") | "CUT TO BLACK")) | (">" whitespace+ TContent)
	}
	@precedence { uc OpenParen CloseParen ws whitespace b1 b2 "===" hash 
	 TContent Action MContent eq "\r" "\n" nl char}

} 


@skip {ws | "\r" | "\n"}